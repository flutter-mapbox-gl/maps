// This file is generated by
// ./scripts/lib/generate.dart

part of mapbox_gl;

abstract class LayerProperties {
  Map<String, dynamic> toJson();
}
{{#layerTypes}}

class {{typePascal}}LayerProperties implements LayerProperties {
  // Paint Properties
  {{#paint_properties}}
  {{#docSplit}}
  /// {{{part}}}
  {{/docSplit}}
  final dynamic {{valueAsCamelCase}};
  
  {{/paint_properties}}
  // Layout Properties
  {{#layout_properties}}
  {{#docSplit}}
  /// {{{part}}}
  {{/docSplit}}
  final dynamic {{valueAsCamelCase}};

  {{/layout_properties}}
  const {{typePascal}}LayerProperties({
    {{#paint_properties}}
    this.{{valueAsCamelCase}},
    {{/paint_properties}}
    {{#layout_properties}}
    this.{{valueAsCamelCase}},
    {{/layout_properties}}
  });

  {{typePascal}}LayerProperties copyWith({{typePascal}}LayerProperties changes) {
    return {{typePascal}}LayerProperties(
      {{#paint_properties}}
      {{valueAsCamelCase}}: changes.{{valueAsCamelCase}} ?? {{valueAsCamelCase}},
      {{/paint_properties}}
      {{#layout_properties}}
      {{valueAsCamelCase}}: changes.{{valueAsCamelCase}} ?? {{valueAsCamelCase}},
      {{/layout_properties}}
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> json = <String, dynamic>{};

    void addIfPresent(String fieldName, dynamic value) {
      if (value != null) {
        json[fieldName] = value;
      }
    }

    {{#paint_properties}}
    addIfPresent('{{value}}', {{valueAsCamelCase}});
    {{/paint_properties}}
    {{#layout_properties}}
    addIfPresent('{{value}}', {{valueAsCamelCase}});
    {{/layout_properties}}
    return json;
  }

  factory {{typePascal}}LayerProperties.fromJson(Map<String, dynamic> json) {
    return {{typePascal}}LayerProperties(
      {{#paint_properties}}
      {{valueAsCamelCase}}: json['{{value}}'],
      {{/paint_properties}}
      {{#layout_properties}}
      {{valueAsCamelCase}}: json['{{value}}'],
      {{/layout_properties}}
    );
  }

}
{{/layerTypes}}


